import java.util.Arrays;
import java.util.List;

public class LambdaDemo4 {

	public static void main(String[] args) {
		new Thread(new Runnable()
				{
			public void run()
			{
				System.out.println("Before Java8, too much code for too little to do ");
			}
				}).start();
// java 8 way:
new Thread(() -> System.out.println("In Java8, Lambda expression rocks !!")).start();
System.out.println("------------------------*******************------------------------");


//Iterating overList using Lambda expressions
List features = Arrays.asList("Lamdas", "Deault Method", "Stream API","Date and Time API");
//features.forEach(n -> System.out.println(n));
System.out.println("-----------------------********************----------------------");

//Even better use Method reference features of java 8
//method reference is denoted by :: (double colon) operator
//looks similar to scope resolution operator of c++

features.forEach(System.out::println);
	}

}
